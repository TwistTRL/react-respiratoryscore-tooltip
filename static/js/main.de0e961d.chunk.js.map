{"version":3,"sources":["lib/RespiratoryScoresTooltip.js","index.js"],"names":["RespiratoryScoresTooltip","ECMODisplay","VADDisplay","_this$props","this","props","location","timeStamp","ECMOVariables","VADVariables","respiratoryVariables","pageX","pageY","respiratoryDisplay","LocationDisplay","getLocationDisplay","getECMODisplay","getVADDisplay","getRespiratoryDisplay","react_default","a","createElement","style","position","zIndex","top","left","pointerEvents","width","borderRadius","padding","margin","overflow","border","boxShadow","display","flexDirection","justifyContent","backgroundColor","whiteSpace","className","fontSize","fontStyle","textAlign","format","ECMO_Flow_Rate_Weight_Normalized","Machine_Type","Abiomed_Cardiac_Index","Left_Beat_Rate","Left_Pump","Right_Beat_Rate","Right_Pump","Membrane_Movement_Left_Ejection","Membrane_Movement_Left_Filling","slice","HeartWare_Pump_Flow","Impella_Flow_Rate","Quadrox_Flow","RateFlow_Flow_Measure","RST","PIP","PEEP","FIO2","PureComponent","ECMO_VARIABLES_SAMPLE","on","off","VAD_VARIABLES_SAMPLE","Abiomed","Abiomed Cardiac Index","Berlin","Berlin Heart Left Beat Rate","Berlin Heart Left Pump","Berlin Heart Right Beat Rate","Berlin Heart Right Pump","Membrane Movement, Left Ejection","Membrane Movement, Left Filling","HeartWare","HeartWare Pump Flow","Impella","Impella Flow Rate","Quadrox","Quadrox Flow (L/min)","RotaFlow","RotaFlow Flow Measure (L/min)","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","Date","ECMOVariablesSelection","VADVariablesSelection","respiratoryVariablesSelection","_this2","_this$state","Fragment","type","min","max","value","onChange","ev","setState","Number","parseInt","target","onClick","JSON","stringify","src_lib_RespiratoryScoresTooltip","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.de0e961d.chunk.js","sourcesContent":["import React, {PureComponent} from \"react\";\nimport {format} from \"date-fns\";\nimport \"./RespiratoryScoresTooltip.css\";\n\nconst RSVToDisplay = {\n    \"RA\":[],\n    \"NC\":[\"NC_Flow\",\"FiO2\",\"iNO_Set\"],\n    \"MASK\":[\"MASK_Flow\",\"FiO2\"],\n    \"BB\":[\"NC_Flow\",\"FiO2\"],\n    \"HFNC\":[\"HFNC_Flow\",\"FiO2\",\"iNO_Set\"],\n    \"CPAP\":[\"CPAP_PEEP_comb\",\"FiO2\"],\n    \"BIPAP\":[\"BIPAP_IPAP\",\"BIPAP_EPAP\",\"BIPAP_Rate\",\"FiO2\"],\n    \"PSV\":[\"PEEP\",\"PS\",\"FiO2\",\"iNO_Set\",\"duration\"],\n    \"PCV\":[\"VT_set_norm\",\"PIP_comb\",\"PEEP\",\"PS\",\"VR\",\"FiO2\",\"iNO_Set\",\"duration\"],\n    \"VCV\":[\"VT_set_norm\",\"PEEP\",\"PS\",\"VR\",\"FiO2\",\"iNO_Set\"],\n    \"HFOV\":[\"HFOV_MPAW\",\"HFOV_Amplitude\",\"HFOV_Frequency\",\"FiO2\",\"iNO_Set\"],\n    \"HFJV\":[\"FiO2\",\"HFJV_PEEP\",\"HFJV_PIP\",\"HFJV_Rate\",\"iNO_Set\"],\n    \"ECMO\":[\"ECMO_Flow_norm\"]\n  }\n\nconst TITLE_COLOR = {\n  \"RA\": \"#A4D65E\",\n  \"NC\": \"#A4D65E\",\n  \"MASK\": \"#A4D65E\",\n  \"BB\": \"#A4D65E\",\n\n  \"HFNC\": \"#41B6E6\",\n  \"CPAP\": \"#41B6E6\",\n  \"BIPAP\": \"#41B6E6\",\n\n  \"PSV\": \"#FBDB65\",\n  \"PCV\": \"#FBDB65\",\n  \"VCV\": \"#FBDB65\",\n\n  \"HFOV\": \"#C6579A\",\n  \"HFJV\": \"#C6579A\",\n  \n  \"ECMO\": \"#F6323E\",\n}\n\n\nclass RespiratoryScoresTooltip extends PureComponent {\n  render() {\n    let { location, timeStamp,\n          ECMOVariables,\n          VADVariables,\n          respiratoryVariables,\n          pageX,pageY,\n          } = this.props;\n    let ECMODisplay, VADDisplay, respiratoryDisplay = null;\n    let LocationDisplay = this.getLocationDisplay(location,timeStamp);\n   \n    if (ECMOVariables) {\n      ECMODisplay = this.getECMODisplay(ECMOVariables);\n    }\n    if (VADVariables) {\n      VADDisplay =  this.getVADDisplay(VADVariables);\n    }\n    if (respiratoryVariables){\n      respiratoryDisplay =  this.getRespiratoryDisplay(respiratoryVariables);\n    }\n    \n    return (\n      <div style={{ position:\"fixed\",zIndex:9999,\n                    top:pageY-50,left:10+pageX,\n                    pointerEvents:\"none\",\n                    width:300,\n                    borderRadius:4,padding:0,margin:0,overflow:\"hidden\",\n                    border: \"solid 1px black\", boxShadow:\"2px 2px 2px black\"\n                    }}>\n        {/*Location section*/}\n        {LocationDisplay}\n        {/*ECMO section*/}\n        {ECMODisplay}\n        {/*VAD section*/}\n        {VADDisplay}\n        {/*RSS section*/}\n        {respiratoryDisplay}\n      </div>\n    )\n  }\n\n  getLocationDisplay(location,timeStamp) {\n    return (\n      <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"space-between\",backgroundColor:\"#ffe7c9\",padding:5,boxShadow:\"0px 0px 5px black\",whiteSpace:\"nowrap\"}}>\n        <div style={{display:\"flex\",flexDirection:\"column\",justifyContent:\"center\"}}>\n          <h1 className=\"RespiratoryScoresTooltip-title\">Location: {location}</h1>\n        </div>\n        <div style={{display:\"flex\",flexDirection:\"column\",fontSize:\"12px\",fontStyle:\"italic\"}}>\n          <div style={{textAlign:\"right\"}}>\n            {format(timeStamp,\"MMM DD YYYY\")}\n          </div>\n          <div style={{textAlign:\"right\"}}>\n            {format(timeStamp,\"HH:mm:ss\")}\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  getECMODisplay(ECMOVariables) {\n    let {ECMO_Flow_Rate_Weight_Normalized} = ECMOVariables;\n    return (\n      <div style={{padding:5,backgroundColor:\"#fff8ef\",fontSize:\"12px\",whiteSpace:\"nowrap\"}}>\n        <h1 className=\"RespiratoryScoresTooltip-title\">ECMO</h1>\n        <table className=\"RespiratoryScoresTooltip-table\">\n          <tbody>\n            <tr>\n              <td className=\"RespiratoryScoresTooltip-table-variableName\">Flow</td>\n              <td>{ECMO_Flow_Rate_Weight_Normalized} mL/kg/min</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n\n  getVADDisplay(VADVariables) {\n    let {Machine_Type} = VADVariables;\n    if (Machine_Type===\"Abiomed\") {\n      let Abiomed_Cardiac_Index = VADVariables[\"Abiomed Cardiac Index\"];\n      return (\n        <div style={{padding:5,backgroundColor:\"#fff8ef\",fontSize:\"12px\",whiteSpace:\"nowrap\"}}>\n          <h1 className=\"RespiratoryScoresTooltip-title\">VAD</h1>\n          <table className=\"RespiratoryScoresTooltip-table\">\n            <tbody>\n              <tr>\n                <td className=\"RespiratoryScoresTooltip-table-variableName\">Machine</td>\n                <td>{Machine_Type}</td>\n              </tr>\n              <tr>\n                <td className=\"RespiratoryScoresTooltip-table-variableName\">Cardiac Index</td>\n                <td>{Abiomed_Cardiac_Index}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      );\n    }\n    if (Machine_Type===\"Berlin\") {\n      let Left_Beat_Rate = VADVariables[\"Berlin Heart Left Beat Rate\"];\n      let Left_Pump = VADVariables[\"Berlin Heart Left Beat Rate\"];\n      let Right_Beat_Rate = VADVariables[\"Berlin Heart Right Beat Rate\"];\n      let Right_Pump = VADVariables[\"Berlin Heart Right Beat Rate\"];\n      let Membrane_Movement_Left_Ejection = VADVariables[\"Membrane Movement, Left Ejection\"] || \"\";\n      let Membrane_Movement_Left_Filling = VADVariables[\"Membrane Movement, Left Filling\"] || \"\";\n      return (\n        <div style={{padding:5,backgroundColor:\"#fff8ef\",fontSize:\"12px\",whiteSpace:\"nowrap\"}}>\n          <h1 className=\"RespiratoryScoresTooltip-title\">VAD</h1>\n          <table className=\"RespiratoryScoresTooltip-table\">\n            <tbody>\n              <tr>\n                <td className=\"RespiratoryScoresTooltip-table-variableName\">Machine</td>\n                <td>{Machine_Type}</td>\n              </tr>\n              <tr>\n                <td className=\"RespiratoryScoresTooltip-table-variableName\">Left Beat Rate</td>\n                <td>{Left_Beat_Rate}</td>\n              </tr>\n              <tr>\n                <td className=\"RespiratoryScoresTooltip-table-variableName\">Left Pump</td>\n                <td>{Left_Pump}</td>\n              </tr>\n              <tr>\n                <td className=\"RespiratoryScoresTooltip-table-variableName\">Right Beat Rate</td>\n                <td>{Right_Beat_Rate}</td>\n              </tr>\n              <tr>\n                <td className=\"RespiratoryScoresTooltip-table-variableName\">Right Pump</td>\n                <td>{Right_Pump}</td>\n              </tr>\n              <tr>\n                <td className=\"RespiratoryScoresTooltip-table-variableName\">Left Ejection</td>\n                <td>{Membrane_Movement_Left_Ejection.slice(0,2)}</td>\n              </tr>\n              <tr>\n                <td className=\"RespiratoryScoresTooltip-table-variableName\">Left Filling</td>\n                <td>{Membrane_Movement_Left_Filling.slice(0,2)}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      );\n    }\n    if (Machine_Type===\"HeartWare\") {\n      let HeartWare_Pump_Flow = VADVariables[\"HeartWare Pump Flow\"];\n      return (\n        <div style={{padding:5,backgroundColor:\"#fff8ef\",fontSize:\"12px\",whiteSpace:\"nowrap\"}}>\n          <h1 className=\"RespiratoryScoresTooltip-title\">VAD</h1>\n          <table className=\"RespiratoryScoresTooltip-table\">\n            <tbody>\n              <tr>\n                <td className=\"RespiratoryScoresTooltip-table-variableName\">Machine</td>\n                <td>{Machine_Type}</td>\n              </tr>\n              <tr>\n                <td className=\"RespiratoryScoresTooltip-table-variableName\">Flow</td>\n                <td>{HeartWare_Pump_Flow}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      );\n    }\n    if (Machine_Type===\"Impella\") {\n      let Impella_Flow_Rate = VADVariables[\"Impella Flow Rate\"];\n      return (\n        <div style={{padding:5,backgroundColor:\"#fff8ef\",fontSize:\"12px\",whiteSpace:\"nowrap\"}}>\n          <h1 className=\"RespiratoryScoresTooltip-title\">VAD</h1>\n          <table className=\"RespiratoryScoresTooltip-table\">\n            <tbody>\n              <tr>\n                <td className=\"RespiratoryScoresTooltip-table-variableName\">Machine</td>\n                <td>{Machine_Type}</td>\n              </tr>\n              <tr>\n                <td className=\"RespiratoryScoresTooltip-table-variableName\">Flow</td>\n                <td>{Impella_Flow_Rate}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      );\n    }\n    if (Machine_Type===\"Quadrox\") {\n      let Quadrox_Flow = VADVariables[\"Quadrox Flow (L/min)\"];\n      return (\n        <div style={{padding:5,backgroundColor:\"#fff8ef\",fontSize:\"12px\",whiteSpace:\"nowrap\"}}>\n          <h1 className=\"RespiratoryScoresTooltip-title\">VAD</h1>\n          <table className=\"RespiratoryScoresTooltip-table\">\n            <tbody>\n              <tr>\n                <td className=\"RespiratoryScoresTooltip-table-variableName\">Machine</td>\n                <td>{Machine_Type}</td>\n              </tr>\n              <tr>\n                <td className=\"RespiratoryScoresTooltip-table-variableName\">Flow</td>\n                <td>{Quadrox_Flow}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      );\n    }\n    if (Machine_Type===\"RotaFlow\") {\n      let RateFlow_Flow_Measure = VADVariables[\"RotaFlow Flow Measure (L/min)\"];\n      return (\n        <div style={{padding:5,backgroundColor:\"#fff8ef\",fontSize:\"12px\",whiteSpace:\"nowrap\"}}>\n          <h1 className=\"RespiratoryScoresTooltip-title\">VAD</h1>\n          <table className=\"RespiratoryScoresTooltip-table\">\n            <tbody>\n              <tr>\n                <td className=\"RespiratoryScoresTooltip-table-variableName\">Machine</td>\n                <td>{Machine_Type}</td>\n              </tr>\n              <tr>\n                <td className=\"RespiratoryScoresTooltip-table-variableName\">Flow</td>\n                <td>{RateFlow_Flow_Measure}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      );\n    }\n  }\n\n  getRespiratoryDisplay(respiratoryVariables) {\n    let {RST} = respiratoryVariables\n    if (RST===\"PSV\") {\n      let {PIP,PEEP,FIO2} = respiratoryVariables\n      return (\n        <div style={{padding:5,backgroundColor:\"#fff8ef\",fontSize:\"12px\",whiteSpace:\"nowrap\"}}>\n          <h1 className=\"RespiratoryScoresTooltip-title\">{respiratoryVariables.RST}</h1>\n          <table className=\"RespiratoryScoresTooltip-table\">\n            <tbody>\n              <tr>\n                <td className=\"RespiratoryScoresTooltip-table-variableName\">PIP</td>\n                <td>{PIP} cm H<sub>2</sub>O</td>\n                <td className=\"RespiratoryScoresTooltip-table-variableName\">FiO<sub>2</sub></td>\n                <td>{FIO2}%</td>\n              </tr>\n              <tr>\n                <td className=\"RespiratoryScoresTooltip-table-variableName\">PEEP</td>\n                <td>{PEEP} cm H<sub>2</sub>O</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      );\n    }\n    return null;\n  }\n}\n\nexport default RespiratoryScoresTooltip\n","import React,{Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport RespiratoryScoresTooltip from \"./lib/RespiratoryScoresTooltip\";\n\nconst ECMO_VARIABLES_SAMPLE = {\n  on: {ECMO_Flow_Rate_Weight_Normalized: 92},\n  off: null\n};\n\nconst VAD_VARIABLES_SAMPLE = {\n  Abiomed: {Machine_Type: \"Abiomed\",\n            \"Abiomed Cardiac Index\": 2.5\n            },\n  Berlin: { Machine_Type: \"Berlin\",\n            \"Berlin Heart Left Beat Rate\": 70,\n            \"Berlin Heart Left Pump\": 25,\n            \"Berlin Heart Right Beat Rate\": 70,\n            \"Berlin Heart Right Pump\": 25,\n            \"Membrane Movement, Left Ejection\": \"++ Complete/almost complete membrane movement to end\",\n            \"Membrane Movement, Left Filling\": \"++ Complete/almost complete membrane movement to end\"\n            },\n  HeartWare: {Machine_Type: \"HeartWare\",\n              \"HeartWare Pump Flow\": 2.3\n              },\n  Impella: {Machine_Type: \"Impella\",\n            \"Impella Flow Rate\": 1.8\n            },\n  Quadrox: {Machine_Type: \"Quadrox\",\n            \"Quadrox Flow (L/min)\": 2.3\n            },\n  RotaFlow: {Machine_Type: \"RotaFlow\",\n            \"RotaFlow Flow Measure (L/min)\": 3.56\n            },\n};\n\n\nclass App extends Component{\n  constructor(props){\n    super(props);\n    this.state={pageX:100, pageY:200,\n                location: \"ICU\",\n                timeStamp: new Date(),\n                ECMOVariablesSelection: \"on\",\n                VADVariablesSelection: \"Abiomed\",\n                respiratoryVariablesSelection: \"PSV\"\n                };\n  }\n  render() {\n    let { pageX,pageY,\n          location,timeStamp,\n          ECMOVariablesSelection,VADVariablesSelection,respiratoryVariablesSelection} = this.state;\n    return (\n      <>\n        {/*pageX*/}\n        <div>\n          pageX:\n          <input  type=\"range\" min={0} max={1000} value={pageX}\n                  onChange={(ev)=> {\n                              this.setState({pageX:Number.parseInt(ev.target.value)});\n                            }}\n          />\n        </div>\n        {/*pageY*/}\n        <div>\n          pageY:\n          <input  type=\"range\" min={0} max={1000} value={pageY}\n                  onChange={(ev)=> {\n                              this.setState({pageY:Number.parseInt(ev.target.value)});\n                            }}\n          />\n        </div>\n        {/*location*/}\n        <div>\n          location:\n          <input  type=\"text\" value={location}\n                  onChange={(ev)=> {\n                              this.setState({location:ev.target.value});\n                            }}\n          />\n        </div>\n        {/*timeStamp*/}\n        <div>\n          timeStamp:\n          <button onClick={(ev)=> {\n                              this.setState({timeStamp:new Date()});\n                            }}\n          >\n            Update timeStamp\n          </button>\n        </div>\n        {/*ECMO Variables*/}\n        <div>\n          ECMOVariables:\n          preset:\n          <select onChange={(ev)=>{\n                              this.setState({ECMOVariablesSelection:ev.target.value});\n                            }}\n          >\n            <option value=\"on\">on</option>\n            <option value=\"off\">off</option>\n          </select> \n          <pre>\n            {JSON.stringify(ECMO_VARIABLES_SAMPLE[ECMOVariablesSelection])}\n          </pre>\n        </div>\n        {/*VAD Variables*/}\n        <div>\n          VADVariables:\n          preset:\n          <select onChange={(ev)=>{\n                              this.setState({VADVariablesSelection:ev.target.value});\n                            }}\n          >\n            <option value=\"Abiomed\">Abiomed</option>\n            <option value=\"Berlin\">Berlin</option>\n            <option value=\"HeartWare\">HeartWare</option>\n            <option value=\"Impella\">Impella</option>\n            <option value=\"Quadrox\">Quadrox</option>\n            <option value=\"RotaFlow\">RotaFlow</option>\n          </select> \n          <pre>\n            {JSON.stringify(VAD_VARIABLES_SAMPLE[VADVariablesSelection])}\n          </pre>\n        </div>\n        {/*Actual tooltip display*/}\n        <RespiratoryScoresTooltip location={location} timeStamp={timeStamp}\n                                  ECMOVariables={ECMO_VARIABLES_SAMPLE[ECMOVariablesSelection]}\n                                  VADVariables={VAD_VARIABLES_SAMPLE[VADVariablesSelection]}\n                                  respiratoryVariables={{\"RST\":\"PSV\",\"PIP\":28,\"FIO2\":30}}\n                                  pageX={pageX} pageY={pageY}\n        />\n      </>\n    );\n  }\n}\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}