{"version":3,"sources":["lib/RespiratoryScoresTooltip.js","index.js"],"names":["RespiratoryScoresTooltip","ECMODisplay","VADDisplay","_this$props","this","props","location","timeStamp","ECMOVariables","VADVariables","respiratoryVariables","pageX","pageY","respiratoryDisplay","LocationDisplay","getLocationDisplay","getECMODisplay","getVADDisplay","getRespiratoryDisplay","react_default","a","createElement","style","position","zIndex","top","left","pointerEvents","width","borderRadius","padding","margin","overflow","border","boxShadow","display","flexDirection","justifyContent","backgroundColor","whiteSpace","className","fontSize","fontStyle","textAlign","format","ECMO_Flow_Rate_Weight_Normalized","Machine_Type","RST","PIP","PEEP","FIO2","PureComponent","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","_this2","_this$state","Fragment","type","min","max","value","onChange","ev","setState","Number","parseInt","target","src_lib_RespiratoryScoresTooltip","Date","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.0f7d17b6.chunk.js","sourcesContent":["import React, {PureComponent} from \"react\";\nimport {format} from \"date-fns\";\nimport \"./RespiratoryScoresTooltip.css\";\n\nconst RSVToDisplay = {\n    \"RA\":[],\n    \"NC\":[\"NC_Flow\",\"FiO2\",\"iNO_Set\"],\n    \"MASK\":[\"MASK_Flow\",\"FiO2\"],\n    \"BB\":[\"NC_Flow\",\"FiO2\"],\n    \"HFNC\":[\"HFNC_Flow\",\"FiO2\",\"iNO_Set\"],\n    \"CPAP\":[\"CPAP_PEEP_comb\",\"FiO2\"],\n    \"BIPAP\":[\"BIPAP_IPAP\",\"BIPAP_EPAP\",\"BIPAP_Rate\",\"FiO2\"],\n    \"PSV\":[\"PEEP\",\"PS\",\"FiO2\",\"iNO_Set\",\"duration\"],\n    \"PCV\":[\"VT_set_norm\",\"PIP_comb\",\"PEEP\",\"PS\",\"VR\",\"FiO2\",\"iNO_Set\",\"duration\"],\n    \"VCV\":[\"VT_set_norm\",\"PEEP\",\"PS\",\"VR\",\"FiO2\",\"iNO_Set\"],\n    \"HFOV\":[\"HFOV_MPAW\",\"HFOV_Amplitude\",\"HFOV_Frequency\",\"FiO2\",\"iNO_Set\"],\n    \"HFJV\":[\"FiO2\",\"HFJV_PEEP\",\"HFJV_PIP\",\"HFJV_Rate\",\"iNO_Set\"],\n    \"ECMO\":[\"ECMO_Flow_norm\"]\n  }\n\nconst TITLE_COLOR = {\n  \"RA\": \"#A4D65E\",\n  \"NC\": \"#A4D65E\",\n  \"MASK\": \"#A4D65E\",\n  \"BB\": \"#A4D65E\",\n\n  \"HFNC\": \"#41B6E6\",\n  \"CPAP\": \"#41B6E6\",\n  \"BIPAP\": \"#41B6E6\",\n\n  \"PSV\": \"#FBDB65\",\n  \"PCV\": \"#FBDB65\",\n  \"VCV\": \"#FBDB65\",\n\n  \"HFOV\": \"#C6579A\",\n  \"HFJV\": \"#C6579A\",\n  \n  \"ECMO\": \"#F6323E\",\n}\n\n\nclass RespiratoryScoresTooltip extends PureComponent {\n  render() {\n    let { location, timeStamp,\n          ECMOVariables,\n          VADVariables,\n          respiratoryVariables,\n          pageX,pageY,\n          } = this.props;\n    let ECMODisplay, VADDisplay, respiratoryDisplay = null;\n    let LocationDisplay = this.getLocationDisplay(location,timeStamp);\n   \n    if (ECMOVariables) {\n      ECMODisplay = this.getECMODisplay(ECMOVariables);\n    }\n    if (VADVariables) {\n      VADDisplay =  this.getVADDisplay(VADVariables);\n    }\n    if (respiratoryVariables){\n      respiratoryDisplay =  this.getRespiratoryDisplay(respiratoryVariables);\n    }\n    \n    return (\n      <div style={{ position:\"fixed\",zIndex:9999,\n                    top:pageY-50,left:10+pageX,\n                    pointerEvents:\"none\",\n                    width:300,\n                    borderRadius:4,padding:0,margin:0,overflow:\"hidden\",\n                    border: \"solid 1px black\", boxShadow:\"2px 2px 2px black\"\n                    }}>\n        {/*Location section*/}\n        {LocationDisplay}\n        {/*ECMO section*/}\n        {ECMODisplay}\n        {/*VAD section*/}\n        {VADDisplay}\n        {/*RSS section*/}\n        {respiratoryDisplay}\n      </div>\n    )\n  }\n\n  getLocationDisplay(location,timeStamp) {\n    return (\n      <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"space-between\",backgroundColor:\"#ffe7c9\",padding:5,boxShadow:\"0px 0px 5px black\",whiteSpace:\"nowrap\"}}>\n        <div style={{display:\"flex\",flexDirection:\"column\",justifyContent:\"center\"}}>\n          <h1 className=\"RespiratoryScoresTooltip-title\">Location: {location}</h1>\n        </div>\n        <div style={{display:\"flex\",flexDirection:\"column\",fontSize:\"12px\",fontStyle:\"italic\"}}>\n          <div style={{textAlign:\"right\"}}>\n            {format(timeStamp,\"MMM DD YYYY\")}\n          </div>\n          <div style={{textAlign:\"right\"}}>\n            {format(timeStamp,\"HH:mm:ss\")}\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  getECMODisplay(ECMOVariables) {\n    let {ECMO_Flow_Rate_Weight_Normalized} = ECMOVariables;\n    return (\n      <div style={{padding:5,backgroundColor:\"#fff8ef\",fontSize:\"12px\",whiteSpace:\"nowrap\"}}>\n        <h1 className=\"RespiratoryScoresTooltip-title\">ECMO</h1>\n        <table className=\"RespiratoryScoresTooltip-table\">\n          <tr>\n            <td className=\"RespiratoryScoresTooltip-table-variableName\">Flow</td>\n            <td>{ECMO_Flow_Rate_Weight_Normalized} mL/kg/min</td>\n          </tr>\n        </table>\n      </div>\n    );\n  }\n\n  getVADDisplay(VADVariables) {\n    let {Machine_Type} = VADVariables;\n    if (Machine_Type===\"RotaWare\") {\n      return (\n        <div style={{padding:5,backgroundColor:\"#fff8ef\",fontSize:\"12px\",whiteSpace:\"nowrap\"}}>\n          <h1 className=\"RespiratoryScoresTooltip-title\">VAD</h1>\n          <table className=\"RespiratoryScoresTooltip-table\">\n            <tr>\n              <td className=\"RespiratoryScoresTooltip-table-variableName\">Machine</td>\n              <td>Machine_Type</td>\n            </tr>\n          </table>\n        </div>\n      );\n    }\n  }\n\n  getRespiratoryDisplay(respiratoryVariables) {\n    let {RST} = respiratoryVariables\n    if (RST===\"PSV\") {\n      let {PIP,PEEP,FIO2} = respiratoryVariables\n      return (\n        <div style={{padding:5,backgroundColor:\"#fff8ef\",fontSize:\"12px\",whiteSpace:\"nowrap\"}}>\n          <h1 className=\"RespiratoryScoresTooltip-title\">{respiratoryVariables.RST}</h1>\n          <table className=\"RespiratoryScoresTooltip-table\">\n            <tr>\n              <td className=\"RespiratoryScoresTooltip-table-variableName\">PIP</td>\n              <td>{PIP} cm H<sub>2</sub>O</td>\n              <td className=\"RespiratoryScoresTooltip-table-variableName\">FiO<sub>2</sub></td>\n              <td>{FIO2}%</td>\n            </tr>\n            <tr>\n              <td className=\"RespiratoryScoresTooltip-table-variableName\">PEEP</td>\n              <td>{PEEP} cm H<sub>2</sub>O</td>\n            </tr>\n          </table>\n        </div>\n      );\n    }\n    return null;\n  }\n}\n\nexport default RespiratoryScoresTooltip\n","import React,{Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport RespiratoryScoresTooltip from \"./lib/RespiratoryScoresTooltip\";\n\nclass App extends Component{\n  constructor(props){\n    super(props);\n    this.state={pageX:100,pageY:100};\n  }\n  render() {\n    let {pageX,pageY} = this.state;\n    return (\n      <>\n        pageX:\n        <input  type=\"range\" min={0} max={1000} value={pageX}\n                onChange={(ev)=> {\n                            this.setState({pageX:Number.parseInt(ev.target.value)})\n                          }}\n        />\n        pageY:\n        <input  type=\"range\" min={0} max={1000} value={pageY}\n                onChange={(ev)=> {\n                            this.setState({pageY:Number.parseInt(ev.target.value)})\n                          }}\n        />\n        <RespiratoryScoresTooltip location={\"ICU\"} timeStamp={new Date()}\n                                  ECMOVariables={{ECMO_Flow_Rate_Weight_Normalized:90}}\n                                  VADVariables={{Machine_Type: \"RotaWare\"}}\n                                  respiratoryVariables={{\"RST\":\"PSV\",\"PIP\":28,\"FIO2\":30}}\n                                  pageX={pageX} pageY={pageY}\n        />\n      </>\n    );\n  }\n}\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}